[{"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/index.js":"1","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/App.js":"2","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/session.js":"3","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/csrf.js":"4","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/index.js":"5","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/SignupFormPage/index.js":"6","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/HomePage/index.js":"7","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/LoginFormPage/index.js":"8","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/Navigation/index.js":"9","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/pet.js":"10","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/ProtectedRoute.js":"11","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/PetPage/index.js":"12","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/NewToDo/index.js":"13","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/NewNote/index.js":"14","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/NewPetForm/index.js":"15"},{"size":885,"mtime":1618847891041,"results":"16","hashOfConfig":"17"},{"size":1734,"mtime":1620253122758,"results":"18","hashOfConfig":"17"},{"size":1835,"mtime":1618847891041,"results":"19","hashOfConfig":"17"},{"size":1592,"mtime":1619973306672,"results":"20","hashOfConfig":"17"},{"size":725,"mtime":1619733116117,"results":"21","hashOfConfig":"17"},{"size":3115,"mtime":1620224869025,"results":"22","hashOfConfig":"17"},{"size":1557,"mtime":1620308909485,"results":"23","hashOfConfig":"17"},{"size":2512,"mtime":1620224554650,"results":"24","hashOfConfig":"17"},{"size":1352,"mtime":1620323821100,"results":"25","hashOfConfig":"17"},{"size":2957,"mtime":1620308400081,"results":"26","hashOfConfig":"17"},{"size":394,"mtime":1619025255523,"results":"27","hashOfConfig":"17"},{"size":2834,"mtime":1620310131689,"results":"28","hashOfConfig":"17"},{"size":1283,"mtime":1620309433289,"results":"29","hashOfConfig":"17"},{"size":1765,"mtime":1620309305414,"results":"30","hashOfConfig":"17"},{"size":1614,"mtime":1620309081174,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"iflrnu",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/index.js",[],["69","70"],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/App.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/session.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/csrf.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/index.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/SignupFormPage/index.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/HomePage/index.js",["71","72","73"],"import React, { useState, useEffect } from 'react';\nimport * as sessionActions from '../../store/session';\nimport { getPets, removePet } from '../../store/pet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport \"./HomePage.css\"\n\nconst HomePage = () => {\n    const dispatch = useDispatch();\n\n    const user = useSelector(state => state.session.user)\n\n    useEffect(() => {\n        async function fetchPets() {\n            if (!user) {\n                return null;\n            }\n            await dispatch(getPets(user.id));\n        }\n        fetchPets()\n    }, [dispatch, user])\n\n    const petState = useSelector(state => state.pet)\n\n    const onRemove = (petId) => async () => {\n        await dispatch(removePet(petId));\n    };\n\n    return (\n        <div className=\"card_page\">\n            <h2 className=\"title\">Your Pets:</h2>\n            {petState.pets && petState.pets.map(pet => (\n                <div key={pet.id} className=\"pet_card\">\n                    <NavLink exact to={`/pets/${pet.id}`} className=\"card_item\">{pet.name}</NavLink>\n                    <p className=\"card_item\">{pet.type}</p>\n                    <form onSubmit={onRemove(pet.id)}>\n                        <button type=\"submit\">Remove</button>\n                    </form>\n                </div>\n            ))\n            }\n            <div className=\"button\">\n                <NavLink to={`/${user.id}/pets/new`} exact={true}>Add a Pet</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage;\n","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/LoginFormPage/index.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/Navigation/index.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/store/pet.js",["74","75","76"],"import { fetch } from './csrf';\n\n\nconst SET_PETS = 'pets/setPets';\nconst SET_ACTIVE = 'pets/setActive'\n// const REMOVE_PET = 'pets/removePet';\n\nconst setPets = (pets) => {\n    return {\n        type: SET_PETS,\n        payload: pets,\n    };\n};\n\nconst setActive = (pet) => {\n    return {\n        type: SET_ACTIVE,\n        payload: pet,\n    };\n};\n\n// const removePet = () => {\n//     return {\n//         type: REMOVE_PET,\n//     };\n// };\n\nexport const getPets = (userId) => async (dispatch) => {\n    const { data: pets } = await fetch(`/api/users/${userId}/pets`, {\n        method: 'GET',\n    })\n\n    dispatch(setPets(pets));\n}\n\nexport const removePet = (petId) => async () => {\n    const response = await fetch(`/api/pets/${petId}`, {\n        method: \"DELETE\",\n    });\n}\n\nexport const removeTodo = (todoId) => async () => {\n    const response = await fetch(`/api/todos/${todoId}`, {\n        method: \"DELETE\",\n    });\n}\n\nexport const removeNote = (noteId) => async () => {\n    const response = await fetch(`/api/notes/${noteId}`, {\n        method: \"DELETE\",\n    });\n}\n\nexport const getActivePet = (petId) => async (dispatch) => {\n    const { data: pet } = await fetch(`/api/pets/${petId}`, {\n        method: 'GET',\n    })\n\n    dispatch(setActive(pet));\n}\n\nexport const newTodo = async (item, petId) => {\n    const response = await fetch(`/api/todos/new`, {\n        method: \"POST\",\n        body: JSON.stringify({\n            item,\n            petId\n        }),\n    });\n    return response.ok;\n}\n\nexport const newNote = async (title, content, petId) => {\n    const response = await fetch('/api/notes/new', {\n        method: \"POST\",\n        body: JSON.stringify({\n            title,\n            content,\n            petId\n        }),\n    });\n    return response.ok;\n}\n\nexport const newPet = async (name, type, userId) => {\n    const response = await fetch('/api/pets/new', {\n        method: \"POST\",\n        body: JSON.stringify({\n            name,\n            type,\n            userId\n        }),\n    });\n    return response.ok;\n}\n\nexport const changeCheck = async (todoId, currentCheck) => {\n    const checked = !currentCheck;\n\n    const response = await fetch(`/api/todos/${todoId}/check`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n            checked\n        }),\n    });\n\n    return response.ok;\n}\n\nconst initialState = {};\n\nconst petReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_PETS:\n            newState = Object.assign({}, state);\n            newState.pets = action.payload;\n            return newState;\n        case SET_ACTIVE:\n            newState = Object.assign({}, state);\n            newState.active = action.payload;\n            return newState;\n        // case REMOVE_PET:\n        //     newState = Object.assign({}, state);\n        //     newState.pet = null;\n        //     return newState;\n        default:\n            return state;\n    }\n};\n\nexport default petReducer;\n","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/ProtectedRoute.js",[],"/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/PetPage/index.js",["77","78"],"import React, { useState, useEffect } from 'react';\nimport { getActivePet, removeTodo, removeNote, changeCheck } from '../../store/pet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect, useParams } from 'react-router-dom';\nimport \"./PetPage.css\"\n\nconst PetPage = () => {\n    const dispatch = useDispatch();\n\n    let { petId } = useParams()\n\n    useEffect(() => {\n        async function fetchActivePet() {\n            if (!petId) {\n                return null;\n            }\n            await dispatch(getActivePet(petId));\n        };\n        fetchActivePet()\n    }, [dispatch, petId])\n\n    const pet = useSelector(state => state.pet)\n\n    // useEffect(async () => {\n    //     await pet.active.ToDos.forEach((todo) => {\n    //         changeCheck(todo.id, todo.checked)\n    //     })\n    // }, [pet.active])\n\n    const todoRemove = (todoId) => async () => {\n        await dispatch(removeTodo(todoId));\n    };\n\n    const noteRemove = (noteId) => async () => {\n        await dispatch(removeNote(noteId));\n    };\n\n    const changeValue = (todoId, checked) => async () => {\n        try {\n            await changeCheck(todoId, checked).then(window.location.reload())\n        } catch (error) {\n            console.error(error)\n        }\n    };\n\n    return (\n        <div>\n            <h1>Your Pet's Page:</h1>\n            <div className=\"card_page\">\n                <h2>To-Do List:</h2>\n                {pet.active && pet.active.ToDos.map(todo => (\n                    <div key={todo.id} className=\"card_todo\">\n                        <input type=\"checkbox\" checked={todo.checked} onChange={changeValue(todo.id, todo.checked)}></input>\n                        <p>{todo.item}</p>\n                        <form onSubmit={todoRemove(todo.id)}>\n                            <button type=\"submit\">X</button>\n                        </form>\n                    </div>\n                ))\n                }\n                <div className=\"buttons\">\n                    <NavLink to={`/pets/${petId}/todos/new`} exact={true} className=\"button_text\">New Item +</NavLink>\n                </div>\n                <h2>Pet Notes:</h2>\n                {pet.active && pet.active.Notes.map(note => (\n                    <div key={note.id} className=\"card\">\n                        <h3>{note.title}</h3>\n                        <p>{note.content}</p>\n                        <form onSubmit={noteRemove(note.id)}>\n                            <button type=\"submit\">Remove</button>\n                        </form>\n                    </div>\n                ))\n                }\n                <div className=\"buttons\">\n                    <NavLink to={`/pets/${petId}/notes/new`} exact={true} className=\"button_text\">New Note +</NavLink>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default PetPage;\n","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/NewToDo/index.js",["79","80","81","82","83"],"import React, { useState, useEffect } from 'react';\nimport { newTodo } from '../../store/pet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect, useParams, useHistory } from 'react-router-dom';\nimport \"./NewToDo.css\"\n\nconst NewToDo = () => {\n    const [item, setItem] = useState(\"\");\n\n    const history = useHistory();\n\n    let { petId } = useParams();\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await newTodo(item, petId);\n        history.push(`/pets/${petId}`);\n    };\n\n    const updateItem = (e) => {\n        setItem(e.target.value)\n    }\n\n    return (\n        <div>\n            <h1>New To-Do Item:</h1>\n            <div className=\"form-container\">\n                <form onSubmit={onSubmit} className=\"form\">\n                    <div className=\"form-field\">\n                        <label>Item:</label>\n                        <input\n                            type=\"text\"\n                            name=\"item\"\n                            onChange={updateItem}\n                            value={item}></input>\n                    </div>\n                    <button type=\"submit\" className=\"form-button\">Add Item</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default NewToDo;\n","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/NewNote/index.js",["84","85","86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { newNote } from '../../store/pet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect, useParams, useHistory } from 'react-router-dom';\nimport \"./NewNote.css\"\n\nconst NewNote = () => {\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    const history = useHistory();\n\n    let { petId } = useParams();\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await newNote(title, content, petId)\n        history.push(`/pets/${petId}`);\n    }\n\n    const updateTitle = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const updateContent = (e) => {\n        setContent(e.target.value)\n    }\n\n    return (\n        <div>\n            <h1>New Note:</h1>\n            <div className=\"form-container\">\n                <form onSubmit={onSubmit} className=\"form\">\n                    <div className=\"form-field\">\n                        <label>Title:</label>\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            onChange={updateTitle}\n                            value={title}></input>\n                    </div>\n                    <div className=\"form-field\">\n                        <label>Content:</label>\n                        <input\n                            type=\"textbox\"\n                            name=\"content\"\n                            onChange={updateContent}\n                            value={content}></input>\n                    </div>\n                    <button type=\"submit\" className=\"form-button\">Add Note</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default NewNote;\n","/Users/gabrielgutierrez/Desktop/PawPad/frontend/src/components/NewPetForm/index.js",["89","90","91","92","93"],"import React, { useState, useEffect } from 'react';\nimport { newPet } from '../../store/pet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect, useParams, useHistory } from 'react-router-dom';\nimport \"./NewPetForm.css\"\n\nconst PetForm = () => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n\n    const userId = useSelector(state => state.session.user.id)\n\n    const history = useHistory();\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await newPet(name, type, userId)\n        history.push('/');\n    };\n\n    const updateName = (e) => {\n        setName(e.target.value)\n    };\n\n    const updateType = (e) => {\n        setType(e.target.value)\n    };\n\n    return (\n        <div className=\"form-container\">\n            <form onSubmit={onSubmit} className=\"form\">\n                <div className=\"form-field\">\n                    <label>Pet's Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={updateName}\n                        value={name}></input>\n                </div>\n                <div className=\"form-field\">\n                    <label>Pet Type:</label>\n                    <input\n                        type=\"text\"\n                        name=\"type\"\n                        onChange={updateType}\n                        value={type}></input>\n                </div>\n                <button type=\"submit\" className=\"form-button\">Add Pet</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default PetForm;\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":2,"column":13,"nodeType":"100","messageId":"101","endLine":2,"endColumn":27},{"ruleId":"98","severity":1,"message":"103","line":5,"column":19,"nodeType":"100","messageId":"101","endLine":5,"endColumn":27},{"ruleId":"98","severity":1,"message":"104","line":37,"column":11,"nodeType":"100","messageId":"101","endLine":37,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":43,"column":11,"nodeType":"100","messageId":"101","endLine":43,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":49,"column":11,"nodeType":"100","messageId":"101","endLine":49,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":4,"column":19,"nodeType":"100","messageId":"101","endLine":4,"endColumn":27},{"ruleId":"98","severity":1,"message":"105","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"106","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"98","severity":1,"message":"107","line":3,"column":23,"nodeType":"100","messageId":"101","endLine":3,"endColumn":34},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":4,"column":19,"nodeType":"100","messageId":"101","endLine":4,"endColumn":27},{"ruleId":"98","severity":1,"message":"105","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"106","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"98","severity":1,"message":"107","line":3,"column":23,"nodeType":"100","messageId":"101","endLine":3,"endColumn":34},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":4,"column":19,"nodeType":"100","messageId":"101","endLine":4,"endColumn":27},{"ruleId":"98","severity":1,"message":"105","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"106","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":4,"column":19,"nodeType":"100","messageId":"101","endLine":4,"endColumn":27},{"ruleId":"98","severity":1,"message":"109","line":4,"column":29,"nodeType":"100","messageId":"101","endLine":4,"endColumn":38},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'sessionActions' is defined but never used.","'Redirect' is defined but never used.","'response' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'NavLink' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]